#
#Sun Aug 11 10:17:15 BST 2013
solution=(lambda (x_30101) (fold (and (xor 0 x_30101) 1) 0 (lambda (x_30102 x_30103) (if0 x_30103 x_30102 x_30103))))
x=[1, 2, 4, 8, 10, 20, 40, 80, 100, 200, 400, 800, 1000, 2000, 4000, 8000, 10000, 20000, 40000, 80000, 100000, 200000, 400000, 800000, 1000000, 2000000, 4000000, 8000000, 10000000, 20000000, 40000000, 80000000, 100000000, 200000000, 400000000, 800000000, 1000000000, 2000000000, 4000000000, 8000000000, 10000000000, 20000000000, 40000000000, 80000000000, 100000000000, 200000000000, 400000000000, 800000000000, 1000000000000, 2000000000000, 4000000000000, 8000000000000, 10000000000000, 20000000000000, 40000000000000, 80000000000000, 100000000000000, 200000000000000, 400000000000000, 800000000000000, 1000000000000000, 2000000000000000, 4000000000000000, 8000000000000000, 0, 1, 3, 7, f, 1f, 3f, 7f, ff, 1ff, 3ff, 7ff, fff, 1fff, 3fff, 7fff, ffff, 1ffff, 3ffff, 7ffff, fffff, 1fffff, 3fffff, 7fffff, ffffff, 1ffffff, 3ffffff, 7ffffff, fffffff, 1fffffff, 3fffffff, 7fffffff, ffffffff, 1ffffffff, 3ffffffff, 7ffffffff, fffffffff, 1fffffffff, 3fffffffff, 7fffffffff, ffffffffff, 1ffffffffff, 3ffffffffff, 7ffffffffff, fffffffffff, 1fffffffffff, 3fffffffffff, 7fffffffffff, ffffffffffff, 1ffffffffffff, 3ffffffffffff, 7ffffffffffff, fffffffffffff, 1fffffffffffff, 3fffffffffffff, 7fffffffffffff, ffffffffffffff, 1ffffffffffffff, 3ffffffffffffff, 7ffffffffffffff, fffffffffffffff, 1fffffffffffffff, 3fffffffffffffff, 7fffffffffffffff, ffffffffffffffff, fffffffffffffffe, fffffffffffffffc, fffffffffffffff8, fffffffffffffff0, ffffffffffffffe0, ffffffffffffffc0, ffffffffffffff80, ffffffffffffff00, fffffffffffffe00, fffffffffffffc00, fffffffffffff800, fffffffffffff000, ffffffffffffe000, ffffffffffffc000, ffffffffffff8000, ffffffffffff0000, fffffffffffe0000, fffffffffffc0000, fffffffffff80000, fffffffffff00000, ffffffffffe00000, ffffffffffc00000, ffffffffff800000, ffffffffff000000, fffffffffe000000, fffffffffc000000, fffffffff8000000, fffffffff0000000, ffffffffe0000000, ffffffffc0000000, ffffffff80000000, ffffffff00000000, fffffffe00000000, fffffffc00000000, fffffff800000000, fffffff000000000, ffffffe000000000, ffffffc000000000, ffffff8000000000, ffffff0000000000, fffffe0000000000, fffffc0000000000, fffff80000000000, fffff00000000000, ffffe00000000000, ffffc00000000000, ffff800000000000, ffff000000000000, fffe000000000000, fffc000000000000, fff8000000000000, fff0000000000000, ffe0000000000000, ffc0000000000000, ff80000000000000, ff00000000000000, fe00000000000000, fc00000000000000, f800000000000000, f000000000000000, e000000000000000, c000000000000000, 1ba2e3edeeafb0a8, 8b0c33156495c20a, d870e4595d103b2d, 72203785b3366a94, 35203905308da297, 28a827b528229b6c, 3f8e588f50df9d77, da5afad129ff12cb, 5ee33ae89c178c34, cb7c1313a612ed7, 293e7855b29608ab, b0830e7ad5c6ccea, 2fa37c13fcde0f47, a5c1443e3d936795, 57cb869c03194707, 974084f1fa38b4e3, 72c057eb9f77ba62, afd1dfc4da079ffc, e0209dcf39759f73, 538dd6adc4313843, 6d34767eef83d60e, f8056c523ca9c656, fa4572194e412e4c, ffeb0ea523f14bf2, 67f3ba99bec948bc, ec6ad88491d7e0cc, 21f33139a46cbd8c, d9fc722dd04f1543, 2909f09f99e636c, caa408c08ac7f535, 2de92f60efb8d319, 8580f2341c9077cf, 418c6fdfd452a8b7, 5e1c8194cd822fcf, fc9befcec77af5a, d7b33ccc4e5b32b0, 231c94a9cfc45faa, 8722d1b671692d53, f46354aeb9bae8ec, edb0fe9e04ea0b46, 287e6906a0bd0783, 9275f722c288e828, 734501f2bd7c103e, e49fa4d765b5f11d, cacf4d005ad91a27, ef3715d74ec68236, 6d47bad981aa858b, 92d729c46daf138b, 1814293115dd71a3, 3ca1048dc762f735, ab3e2e57e6b70194, 9c6301a2922957af, 76bf010563dcd95, 68fe449e526a4f31, 8528fa3411f0d73f, 21823b967e0b7a5a, 11ce35b8d8078ce6, b1d138d43865d555, 98026db55c094294, 7e10fd7616302260, e93679ce94379503, 999ef7f6f26528a7, 70569ee246382737, 2b08948d815b5326, 57f7ca58d6ec90bc]
size=13
ops=[and, fold, if0, xor]
found=(fold 1 1 (lambda (y a) (and (if0 (if0 y 1 0) 0 x) 1)))
y=[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0]
id=1pWBkpwA3qo9SQ24D4gAw95r
